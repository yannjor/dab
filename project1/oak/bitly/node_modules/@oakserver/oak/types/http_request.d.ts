import * as dntShim from "./_dnt.shims.js";
import { type Deferred } from "./deps.js";
import type { ServerRequest, ServerRequestBody, UpgradeWebSocketFn, UpgradeWebSocketOptions } from "./types";
/** An abstraction which wraps a {@linkcode Request} from Deno's flash server.
 * The constructor takes a {@linkcode Deferred} which it will resolve when the
 * response is ready.
 *
 * This request can be used in situations where there isn't a specific method
 * to respond with, but where a `Promise<Response>` is accepted as a value. It
 * is specifically designed to work with Deno's flash server.
 */
export declare class HttpRequest implements ServerRequest {
    #private;
    get remoteAddr(): string | undefined;
    get headers(): dntShim.Headers;
    get method(): string;
    get url(): string;
    constructor(request: dntShim.Request, deferred: Deferred<dntShim.Response>, upgradeWebSocket?: UpgradeWebSocketFn);
    error(reason?: any): void;
    getBody(): ServerRequestBody;
    respond(response: dntShim.Response): Promise<void>;
    upgrade(options?: UpgradeWebSocketOptions): WebSocket;
}

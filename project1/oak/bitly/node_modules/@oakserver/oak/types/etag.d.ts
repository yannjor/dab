/**
 * A collection of APIs for dealing with ETags in requests and responses.
 *
 * @module
 */
import * as dntShim from "./_dnt.shims.js";
import type { State } from "./application.js";
import type { Context } from "./context.js";
import type { Middleware } from "./middleware.js";
export interface ETagOptions {
    /** Override the default behavior of calculating the `ETag`, either forcing
     * a tag to be labelled weak or not. */
    weak?: boolean;
}
/**
 * Just the part of `Deno.FileInfo` that is required to calculate an `ETag`,
 * so partial or user generated file information can be passed.
 */
export interface FileInfo {
    mtime: Date | null;
    size: number;
}
/** For a given Context, try to determine the response body entity that an ETag
 * can be calculated from. */
export declare function getEntity<S extends State = Record<string, any>>(context: Context<S>): Promise<string | Uint8Array | dntShim.Deno.FileInfo | undefined>;
/**
 * Calculate an ETag value for an entity. If the entity is `FileInfo`, then the
 * tag will default to a _weak_ ETag.  `options.weak` overrides any default
 * behavior in generating the tag.
 *
 * @param entity A string, Uint8Array, or file info to use to generate the ETag
 * @param options
 */
export declare function calculate(entity: string | Uint8Array | FileInfo, options?: ETagOptions): Promise<string>;
/**
 * Create middleware that will attempt to decode the response.body into
 * something that can be used to generate an `ETag` and add the `ETag` header to
 * the response.
 */
export declare function factory<S extends State = Record<string, any>>(options?: ETagOptions): Middleware<S>;
/**
 * A helper function that takes the value from the `If-Match` header and an
 * entity and returns `true` if the `ETag` for the entity matches the supplied
 * value, otherwise `false`.
 *
 * See MDN's [`If-Match`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match)
 * article for more information on how to use this function.
 */
export declare function ifMatch(value: string, entity: string | Uint8Array | FileInfo, options?: ETagOptions): Promise<boolean>;
/**
 * A helper function that takes the value from the `If-No-Match` header and
 * an entity and returns `false` if the `ETag` for the entity matches the
 * supplied value, otherwise `false`.
 *
 * See MDN's [`If-None-Match`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)
 * article for more information on how to use this function.
 */
export declare function ifNoneMatch(value: string, entity: string | Uint8Array | FileInfo, options?: ETagOptions): Promise<boolean>;

version: "3.4"

services:
  web:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 7800:7800
    depends_on:
      - ui
      - api
    command: [nginx-debug, '-g', 'daemon off;']

  ui:
    build: ui
    image: ui
    restart: "no"
    ports:
      - 3000:3000
    depends_on:
      - api
    env_file:
      - project.env

  api:
    build: api
    image: api
    restart: "no"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3001:3001
    depends_on:
      - database
      - flyway
      - zookeeper
      - kafka
    env_file:
      - project.env

  database:
    container_name: dab-p2-database-9255dce1-9359-48e4-9f9d-37ad7eba2a33
    image: postgres:14.1
    restart: "no"
    env_file:
      - project.env

  flyway:
    image: flyway/flyway:8.4.0-alpine
    depends_on:
      - database
    volumes:
      - .:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.env

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "topic-test:1:1"
